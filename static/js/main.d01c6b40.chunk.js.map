{"version":3,"sources":["components/Form/Form.js","components/TodoItem/TodoItem.js","components/shapes/todoShapes.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["Form","onSubmit","useState","todoValue","setTodoValue","newTodo","id","Date","title","completed","name","value","onChange","event","target","type","className","placeholder","required","TodoItem","PropTypes","number","isRequired","string","bool","todo","checked","setChecked","onClick","TodoList","todos","htmlFor","map","key","defaultProps","TodoApp","setTodos","filter","length","countActiveTodos","href","App","ReactDOM","render","document","getElementById"],"mappings":"mQAGaA,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACFC,mBAAS,IADP,mBAC7BC,EAD6B,KAClBC,EADkB,KAcpC,OACE,0BAAMH,SAZa,WACnB,IAAMI,EAAU,CACdC,IAAK,IAAIC,KACTC,MAAOL,EACPM,WAAW,GAGbR,EAASI,GACTD,EAAa,KAIiBM,KAAK,QACjC,2BACEC,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAAaS,EAAMC,OAAOH,QAC7CI,KAAK,OACLC,UAAU,WACVC,YAAY,yBACZC,UAAQ,M,gBCrBHC,GCDPC,IAAUC,OAAOC,WACdF,IAAUG,OAAOD,WACbF,IAAUI,KAAKF,WDDJ,SAAC,GAAc,IAAZG,EAAW,EAAXA,KAAW,EACNvB,oBAAS,GADH,mBAC7BwB,EAD6B,KACpBC,EADoB,KAGpC,OACE,wBAAIX,UAAWU,EAAU,YAAc,IACrC,yBAAKV,UAAU,QACb,2BACEY,QAAS,kBAAMD,GAAYD,IAC3BX,KAAK,WACLC,UAAU,WAEZ,+BAAQS,EAAKjB,OACb,4BAAQO,KAAK,SAASC,UAAU,aAElC,2BAAOD,KAAK,OAAOC,UAAU,YEbtBa,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAASd,UAAU,QACjB,2BAAOD,KAAK,WAAWT,GAAG,aAAaU,UAAU,eACjD,2BAAOe,QAAQ,cAAf,wBAEA,wBAAIf,UAAU,aACXc,EAAME,KAAI,SAAAP,GAAI,OAAI,kBAAC,EAAD,CAAUQ,IAAKR,EAAKnB,GAAImB,KAAMA,UAKvDI,EAASK,aAAe,CACtBJ,MAAO,ICLF,IAAMK,EAAU,WAAO,IAAD,EACDjC,mBAAS,IADR,mBACpB4B,EADoB,KACbM,EADa,KAO3B,OACE,6BAASpB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,kBAAC,EAAD,CAAMf,SARZ,SAAkBwB,GAChBW,EAAS,GAAD,mBAAKN,GAAL,CAAYL,SASlB,kBAAC,EAAD,CAAUK,MAAOA,IAEjB,4BAAQd,UAAU,UAChB,0BAAMA,UAAU,cAxBxB,SAA0Bc,GAKxB,OAJoBA,EAAMO,QACxB,SAAAZ,GAAI,OAAuB,IAAnBA,EAAKhB,aAGI6B,OAoBVC,CAAiBT,GACjB,IAFH,cAMA,wBAAId,UAAU,WACZ,4BACE,uBAAGwB,KAAK,KAAKxB,UAAU,YAAvB,QAGF,4BACE,uBAAGwB,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQzB,KAAK,SAASC,UAAU,mBAAhC,sBCvCOyB,MANf,WACE,OACE,kBAAC,EAAD,OCIJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d01c6b40.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ onSubmit }) => {\n  const [todoValue, setTodoValue] = useState('');\n\n  const handleSubmit = () => {\n    const newTodo = {\n      id: +new Date(),\n      title: todoValue,\n      completed: false,\n    };\n\n    onSubmit(newTodo);\n    setTodoValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} name=\"todo\">\n      <input\n        value={todoValue}\n        onChange={event => setTodoValue(event.target.value)}\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        required\n      />\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShapes } from '../shapes/todoShapes';\n\nexport const TodoItem = ({ todo }) => {\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <li className={checked ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          onClick={() => setChecked(!checked)}\n          type=\"checkbox\"\n          className=\"toggle\"\n        />\n        <label>{todo.title}</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape(todoShapes).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todoShapes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { todoShapes } from '../shapes/todoShapes';\n\nexport const TodoList = ({ todos }) => (\n  <section className=\"main\">\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todos.map(todo => <TodoItem key={todo.id} todo={todo} />)}\n    </ul>\n  </section>\n);\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(todoShapes)),\n};\n","import React, { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { TodoList } from '../TodoList/TodoList';\n\nfunction countActiveTodos(todos) {\n  const activeTodos = todos.filter(\n    todo => todo.completed === false,\n  );\n\n  return activeTodos.length;\n}\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n\n  function onSubmit(todo) {\n    setTodos([...todos, todo]);\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <Form onSubmit={onSubmit} />\n      </header>\n      <TodoList todos={todos} />\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {countActiveTodos(todos)}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}